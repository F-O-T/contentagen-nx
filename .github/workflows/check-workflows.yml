name: Convert PR to Draft (after CI)

on:
  workflow_run:
    workflows: ["Tests", "Typescript typechecking", "Biome check"]
    types: [completed]
    # Optional: restrict to default branch where CI runs
    # branches: [master]  # or main

concurrency:
  group: wr-${{ github.event.workflow_run.head_sha }}
  cancel-in-progress: true

permissions:
  actions: read
  contents: read
  pull-requests: write
  issues: write

jobs:
  convert_to_draft:
    runs-on: ubuntu-latest
    steps:
      - name: Resolve PR by head SHA
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const headSha = context.payload.workflow_run.head_sha;

            // Map the completed run's commit to its PR(s)
            const prs = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner, repo, commit_sha: headSha,
            });
            if (!prs.data.length) {
              core.notice('No PR associated with this commit SHA.');
              core.setOutput('found', 'false');
              return;
            }
            // Prefer an open PR
            const candidate = prs.data.find(p => p.state === 'open') || prs.data[0];
            const full = await github.rest.pulls.get({ owner, repo, pull_number: candidate.number });

            core.setOutput('found', 'true');
            core.setOutput('number', String(full.data.number));
            core.setOutput('node_id', full.data.node_id);
            core.setOutput('is_draft', full.data.draft ? 'true' : 'false');

      - name: Check CI conclusions for this commit
        id: ci
        if: steps.pr.outputs.found == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const headSha = context.payload.workflow_run.head_sha;
            const required = ["Tests", "Typescript typechecking", "Biome check"];

            const runs = await github.rest.actions.listWorkflowRunsForRepo({
              owner, repo, event: 'pull_request', per_page: 100
            });

            const latest = {};
            for (const run of runs.data.workflow_runs) {
              if (run.head_sha !== headSha) continue;
              if (!required.includes(run.name)) continue;
              if (run.status !== 'completed') continue;
              const prev = latest[run.name];
              if (!prev || new Date(run.created_at) > new Date(prev.created_at)) {
                latest[run.name] = run;
              }
            }

            const allCompleted = required.every(n => latest[n]);
            const anyFailed = required.some(n => {
              const c = String(latest[n]?.conclusion || '').toLowerCase();
              return ['failure','cancelled','timed_out','action_required'].includes(c);
            });

            core.setOutput('all_completed', allCompleted ? 'true' : 'false');
            core.setOutput('any_failed', anyFailed ? 'true' : 'false');

      - name: Mark PR as draft
        if: >
          steps.pr.outputs.found == 'true' &&
          steps.pr.outputs.is_draft == 'false' &&
          steps.ci.outputs.all_completed == 'true' &&
          steps.ci.outputs.any_failed == 'true'
        uses: voiceflow/draft-pr@latest
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-node-id: ${{ steps.pr.outputs.node_id }}

      - name: Leave failure guidance comment
        if: >
          steps.pr.outputs.found == 'true' &&
          steps.ci.outputs.all_completed == 'true' &&
          steps.ci.outputs.any_failed == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ steps.pr.outputs.number }}
          body: |
            This PR was automatically converted to draft because required checks (Tests / Typecheck / Biome) did not pass.

            Please run locally and fix issues:
            - Tests: `bunx nx affected -t test`
            - Typecheck: `bunx nx affected -t typecheck`
            - Biome: `bunx nx affected -t check`

            Mark as "Ready for review" after everything passes.
