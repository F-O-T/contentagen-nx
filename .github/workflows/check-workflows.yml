name: Convert PR to Draft (target)

on:
  pull_request_target:
    branches: ["*"]
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  actions: read
  contents: read
  pull-requests: write
  issues: write

jobs:
  convert_to_draft:
    name: Convert PR to Draft after checks
    runs-on: ubuntu-latest
    steps:
      - name: Wait for CI workflows to complete for this commit
        id: wait
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const pr = context.payload.pull_request;
            const headSha = pr.head.sha;
            const required = ["Tests", "Typescript typechecking", "Biome check"];

            const until = Date.now() + 15 * 60 * 1000;
            let allCompleted = false;
            let anyFailed = false;

            while (Date.now() < until) {
              const runs = await github.rest.actions.listWorkflowRunsForRepo({
                owner, repo, event: 'pull_request', per_page: 100
              });

              const latest = {};
              for (const run of runs.data.workflow_runs) {
                if (run.head_sha !== headSha) continue;
                if (!required.includes(run.name)) continue;
                if (run.status !== 'completed') continue;
                const prev = latest[run.name];
                if (!prev || new Date(run.created_at) > new Date(prev.created_at)) {
                  latest[run.name] = run;
                }
              }

              allCompleted = required.every(n => latest[n]);
              if (allCompleted) {
                anyFailed = required.some(n => {
                  const c = String(latest[n].conclusion || '').toLowerCase();
                  return ['failure','cancelled','timed_out','action_required'].includes(c);
                });
                break;
              }
              await new Promise(r => setTimeout(r, 15000));
            }

            core.setOutput('all_completed', allCompleted ? 'true' : 'false');
            core.setOutput('any_failed', anyFailed ? 'true' : 'false');

      - name: Mark as draft
        if: ${{ steps.wait.outputs.all_completed == 'true' && steps.wait.outputs.any_failed == 'true' && github.event.pull_request.draft == false }}
        uses: voiceflow/draft-pr@latest
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-node-id: ${{ github.event.pull_request.node_id }}

      - name: Leave failure guidance comment
        if: ${{ steps.wait.outputs.all_completed == 'true' && steps.wait.outputs.any_failed == 'true' }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            This PR was automatically converted to draft because required checks (Tests / Typecheck / Biome) did not pass.

            Please run locally and fix issues:
            - Tests: `bunx nx affected -t test`
            - Typecheck: `bunx nx affected -t typecheck`
            - Biome: `bunx nx affected -t check`

            Mark as "Ready for review" after everything passes.
