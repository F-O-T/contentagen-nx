name: Large PR Labeler

on:
  pull_request_target:
    branches: [master]
    types: [opened, synchronize, reopened]

jobs:
  large-pr-check:
    if: ${{ github.event.pull_request.draft == false }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write
    
    steps:
      - name: Check PR size and add labels
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const prNumber = pr.number;
            
            // Get PR details
            const filesChanged = pr.changed_files;
            const additions = pr.additions;
            const deletions = pr.deletions;
            const totalChanges = additions + deletions;
            
            const labels = [];
            
            // Check for gigantic PRs
            if (filesChanged > 50 || totalChanges > 5000) {
              labels.push('gigantic-pr');
              
              // Add a comment explaining the size
              const commentBody = "## 🐘 Gigantic PR Detected\n\nThis PR is quite large and will require significant review time.\n\n**PR Stats:**\n- 📁 Files changed: " + filesChanged + "\n- ➕ Additions: " + additions.toLocaleString() + "\n- ➖ Deletions: " + deletions.toLocaleString() + "\n- 📊 Total changes: " + totalChanges.toLocaleString() + "\n\n**Review Considerations:**\n- Please ensure this PR is focused on a single logical change\n- Consider breaking it into smaller, focused PRs if possible\n- Allow extra time for thorough review\n- Make sure all tests pass and documentation is updated\n\nThank you for your contribution! 🙏";
              await github.rest.issues.createComment({
                issue_number: prNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
            }
            
            // Add additional size context labels
            if (filesChanged > 100) {
              labels.push('many-files');
            }
            if (totalChanges > 10000) {
              labels.push('massive-changes');
            }
            
            // Add the labels if any were determined
            if (labels.length > 0) {
              try {
                // Remove conflicting labels first
                const existingLabels = pr.labels || [];
                const conflictingLabels = ['size/S', 'size/M', 'size/L', 'size/XL'];
                
                for (const labelName of conflictingLabels) {
                  if (existingLabels.some(label => label.name === labelName)) {
                    try {
                      await github.rest.issues.removeLabel({
                        issue_number: prNumber,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        name: labelName
                      });
                    } catch (error) {
                      console.log(`Could not remove label ${labelName}:`, error.message);
                    }
                  }
                }
                
                // Add the new labels
                await github.rest.issues.addLabels({
                  issue_number: prNumber,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  labels: labels
                });
              } catch (error) {
                console.log('Could not add labels:', error.message);
              }
            }
