name: Bun Security Audit

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]
  schedule:
    # Run weekly on Mondays at 3 AM UTC
    - cron: '0 3 * * 1'
  workflow_dispatch:

jobs:
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/package.json', '**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run Bun Audit
        run: |
          echo "üîç Running Bun security audit..."
          
          # Run bun audit with JSON output for better parsing
          if bun audit --json > audit-report.json 2>&1; then
            echo "‚úÖ No security vulnerabilities found"
            cat audit-report.json
          else
            echo "‚ö†Ô∏è Security vulnerabilities detected!"
            cat audit-report.json
            
            # Check for critical vulnerabilities
            if bun audit --level critical | grep -q "vulnerabilities"; then
              echo "üö® CRITICAL vulnerabilities found!"
              echo "These must be fixed before merging"
              exit 1
            fi
            
            # Check for high severity vulnerabilities  
            if bun audit --level high | grep -q "vulnerabilities"; then
              echo "üî¥ HIGH severity vulnerabilities found!"
              echo "These should be fixed before merging"
              
              # Create a comment on PR if this is a PR
              if [ "${{ github.event_name }}" == "pull_request" ]; then
                echo "Creating comment on PR..."
                # This will be handled by the GitHub script below
              fi
            fi
          fi

      - name: Comment on PR if vulnerabilities found
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const context = github.context;
            const prNumber = context.payload.pull_request.number;
            
            await github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üîí Security Audit Failed

This PR introduces security vulnerabilities that must be addressed:

**Next Steps:**
1. Run \`bun audit\` locally to see the full report
2. Update the vulnerable dependencies
3. Commit the updated \`package.json\` and \`bun.lockb\`
4. The security check will automatically pass once vulnerabilities are fixed

**Critical vulnerabilities block merging** and must be fixed immediately.

üõ°Ô∏è *This is an automated security check*`
            });

      - name: Generate Security Report
        run: |
          echo "üìä Generating security report..."
          
          # Create a detailed security report
          {
            echo "# Security Audit Report"
            echo "Generated on: $(date)"
            echo "Repository: ${{ github.repository }}"
            echo "Ref: ${{ github.ref }}"
            echo ""
            echo "## Audit Results"
            echo ""
            echo "\`\`\`"
            bun audit || true
            echo "\`\`\`"
            echo ""
            echo "## Outdated Dependencies Check"
            echo ""
            echo "\`\`\`"
            bun outdated || true
            echo "\`\`\`"
          } > security-report.md
          
          echo "‚úÖ Security report generated"

      - name: Upload Security Report
        uses: actions/upload-artifact@v3
        with:
          name: security-report-${{ github.run_number }}
          path: security-report.md
          retention-days: 30

      - name: Create Security Issue for Critical Vulnerabilities
        if: failure() && github.ref == 'refs/heads/master'
        uses: actions/github-script@v7
        with:
          script: |
            const context = github.context;
            
            // Check if there's already an open security issue
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'security,audit-failed',
              state: 'open'
            });
            
            if (issues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'üö® Security Audit Failed - Critical Vulnerabilities Detected',
                labels: ['security', 'audit-failed', 'priority-critical'],
                body: `## Security Audit Failed

The automated security audit has detected critical vulnerabilities in the repository dependencies.

### Action Required
- Run \`bun audit\` to see the full vulnerability report
- Update all vulnerable dependencies immediately
- Ensure all security patches are applied

### Audit Details
- **Repository**: ${{ github.repository }}
- **Branch**: ${{ github.ref_name }}
- **Timestamp**: $(date)

### Next Steps
1. Fix all critical and high-severity vulnerabilities
2. Update the \`package.json\` and \`bun.lockb\` files
3. Commit and push the security updates
4. Verify the audit passes

This issue will be automatically closed once the security audit passes.

üõ°Ô∏è *Automated security alert*`
              });
            }