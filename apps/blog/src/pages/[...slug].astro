---
import { sdk, agentId } from "../contentagen";
import BlogPost from "../layouts/BlogPost.astro";

export async function getStaticPaths() {
  const response = await sdk.listContentByAgent({
    agentId: [agentId],
    status: ["approved"],
  });

  return response.posts.map((post) => ({
    params: { slug: post.meta.slug },
    props: {
      post,
      author: await sdk.getAuthorByAgentId({ agentId }),
      relatedPosts: await getRelatedPosts(post.meta?.slug ?? ""),
    },
  }));
}

async function getRelatedPosts(currentSlug: string) {
  const relatedSlugs = await sdk.getRelatedSlugs({
    slug: currentSlug,
    agentId
  });

  const relatedPosts = [];
  for (const slug of relatedSlugs.slice(0, 3)) {
    try {
      const relatedPost = await sdk.getContentBySlug({
        slug,
        agentId
      });
      if (relatedPost.status === "approved") {
        relatedPosts.push(relatedPost);
      }
    } catch (error) {
      console.error(`Error fetching related post ${slug}:`, error);
    }
  }
  return relatedPosts;
}

const { post, author, relatedPosts } = Astro.props;
---

<BlogPost post={post} />
