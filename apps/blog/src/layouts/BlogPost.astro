---
import { Image } from "astro:assets";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import BaseHead from "../components/BaseHead.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { marked } from "marked";

const { post, author, relatedPosts } = Astro.props;
const htmlBody = marked.parse(post.body);
---

<BaseHead
  title={post.meta?.title ?? ""}
  description={post.meta?.description ?? ""}
  image={post.imageUrl}
  keywords={post.meta?.keywords}
/>

<Navbar />
<main class="container mx-auto p-4 max-w-4xl">
  <article>
    {post.imageUrl && (
      <div class="mb-8">
        <Image
          src={post.imageUrl}
          alt={post.meta?.title ?? ""}
          width={1020}
          height={510}
          class={"rounded-lg aspect-video object-cover"}
          format="webp"
          loading="lazy"
        />
      </div>
    )}

    <div class="flex flex-col items-center gap-4">
      <header class="text-center flex flex-col items-center gap-4">
        <div class="text-sm text-muted-foreground flex flex-col items-center gap-4">
          <FormattedDate date={new Date(post.createdAt) } />
        </div>
         <h1 class="text-4xl font-bold text-foreground">
           {post.meta?.title ?? ""}
         </h1>

         <!-- Author Information -->
         <div class="flex items-center gap-3 text-sm text-muted-foreground">
           {author.profilePhoto && (
             <img
               src={`data:${author.profilePhoto.contentType};base64,${author.profilePhoto.image}`}
               alt={author.name}
               class="w-8 h-8 rounded-full object-cover"
             />
           )}
           <span>By {author.name}</span>
         </div>

         {post.stats?.readTimeMinutes && (
           <div class="text-sm text-start text-muted-foreground">
             <span>Read time: {post.stats.readTimeMinutes} min</span>
           </div>
         )}
      </header>
      <div class="prose  mx-auto">
        {htmlBody && <div set:html={htmlBody} />}
       </div>
     </div>
   </article>

   <!-- Related Posts Section -->
   {relatedPosts.length > 0 && (
     <section class="mt-12 pt-8 border-t border-gray-200 dark:border-gray-700">
       <h2 class="text-2xl font-bold text-foreground mb-6">Related Posts</h2>
       <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
         {relatedPosts.map((relatedPost) => (
           <a
             href={`/${relatedPost.meta?.slug}/`}
             class="block group"
           >
             {relatedPost.imageUrl && (
               <Image
                 src={relatedPost.imageUrl}
                 alt={relatedPost.meta?.title ?? ""}
                 width={400}
                 height={200}
                 class="w-full rounded-lg mb-3 transition-transform group-hover:scale-105 aspect-video object-cover"
                 format="webp"
                 loading="lazy"
               />
             )}
             <h3 class="text-lg font-semibold text-foreground group-hover:text-blue-600 transition-colors line-clamp-2">
               {relatedPost.meta?.title ?? ""}
             </h3>
             <p class="text-sm text-muted-foreground mt-1">
               <FormattedDate date={new Date(relatedPost.createdAt)} />
             </p>
           </a>
         ))}
       </div>
     </section>
   )}
 </main>
 <Footer />
