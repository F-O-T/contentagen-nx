/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as DashboardRouteImport } from './routes/_dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as AuthEmailVerificationRouteImport } from './routes/auth/email-verification'
import { Route as DashboardHomeRouteImport } from './routes/_dashboard/home'
import { Route as DashboardContentIndexRouteImport } from './routes/_dashboard/content/index'
import { Route as DashboardAgentsIndexRouteImport } from './routes/_dashboard/agents/index'
import { Route as DashboardContentReviewRouteImport } from './routes/_dashboard/content/review'
import { Route as DashboardContentGenerateRouteImport } from './routes/_dashboard/content/generate'
import { Route as DashboardContentExportRouteImport } from './routes/_dashboard/content/export'
import { Route as DashboardAgentsEditRouteImport } from './routes/_dashboard/agents/edit'
import { Route as DashboardAgentsFlowRouteImport } from './routes/_dashboard/agents/_flow'
import { Route as DashboardAgentsFlowManualRouteImport } from './routes/_dashboard/agents/_flow/manual'
import { Route as DashboardAgentsFlowChoiceRouteImport } from './routes/_dashboard/agents/_flow/choice'

const DashboardAgentsRouteImport = createFileRoute('/_dashboard/agents')()

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardAgentsRoute = DashboardAgentsRouteImport.update({
  id: '/agents',
  path: '/agents',
  getParentRoute: () => DashboardRoute,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)
const AuthEmailVerificationRoute = AuthEmailVerificationRouteImport.update({
  id: '/email-verification',
  path: '/email-verification',
  getParentRoute: () => AuthRoute,
} as any)
const DashboardHomeRoute = DashboardHomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardContentIndexRoute = DashboardContentIndexRouteImport.update({
  id: '/content/',
  path: '/content/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAgentsIndexRoute = DashboardAgentsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardAgentsRoute,
} as any)
const DashboardContentReviewRoute = DashboardContentReviewRouteImport.update({
  id: '/content/review',
  path: '/content/review',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardContentGenerateRoute =
  DashboardContentGenerateRouteImport.update({
    id: '/content/generate',
    path: '/content/generate',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardContentExportRoute = DashboardContentExportRouteImport.update({
  id: '/content/export',
  path: '/content/export',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAgentsEditRoute = DashboardAgentsEditRouteImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => DashboardAgentsRoute,
} as any)
const DashboardAgentsFlowRoute = DashboardAgentsFlowRouteImport.update({
  id: '/_flow',
  getParentRoute: () => DashboardAgentsRoute,
} as any)
const DashboardAgentsFlowManualRoute =
  DashboardAgentsFlowManualRouteImport.update({
    id: '/manual',
    path: '/manual',
    getParentRoute: () => DashboardAgentsFlowRoute,
  } as any)
const DashboardAgentsFlowChoiceRoute =
  DashboardAgentsFlowChoiceRouteImport.update({
    id: '/choice',
    path: '/choice',
    getParentRoute: () => DashboardAgentsFlowRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/home': typeof DashboardHomeRoute
  '/auth/email-verification': typeof AuthEmailVerificationRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/agents': typeof DashboardAgentsFlowRouteWithChildren
  '/agents/edit': typeof DashboardAgentsEditRoute
  '/content/export': typeof DashboardContentExportRoute
  '/content/generate': typeof DashboardContentGenerateRoute
  '/content/review': typeof DashboardContentReviewRoute
  '/agents/': typeof DashboardAgentsIndexRoute
  '/content': typeof DashboardContentIndexRoute
  '/agents/choice': typeof DashboardAgentsFlowChoiceRoute
  '/agents/manual': typeof DashboardAgentsFlowManualRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/home': typeof DashboardHomeRoute
  '/auth/email-verification': typeof AuthEmailVerificationRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/agents': typeof DashboardAgentsIndexRoute
  '/agents/edit': typeof DashboardAgentsEditRoute
  '/content/export': typeof DashboardContentExportRoute
  '/content/generate': typeof DashboardContentGenerateRoute
  '/content/review': typeof DashboardContentReviewRoute
  '/content': typeof DashboardContentIndexRoute
  '/agents/choice': typeof DashboardAgentsFlowChoiceRoute
  '/agents/manual': typeof DashboardAgentsFlowManualRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/_dashboard/home': typeof DashboardHomeRoute
  '/auth/email-verification': typeof AuthEmailVerificationRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/_dashboard/agents': typeof DashboardAgentsRouteWithChildren
  '/_dashboard/agents/_flow': typeof DashboardAgentsFlowRouteWithChildren
  '/_dashboard/agents/edit': typeof DashboardAgentsEditRoute
  '/_dashboard/content/export': typeof DashboardContentExportRoute
  '/_dashboard/content/generate': typeof DashboardContentGenerateRoute
  '/_dashboard/content/review': typeof DashboardContentReviewRoute
  '/_dashboard/agents/': typeof DashboardAgentsIndexRoute
  '/_dashboard/content/': typeof DashboardContentIndexRoute
  '/_dashboard/agents/_flow/choice': typeof DashboardAgentsFlowChoiceRoute
  '/_dashboard/agents/_flow/manual': typeof DashboardAgentsFlowManualRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/home'
    | '/auth/email-verification'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/agents'
    | '/agents/edit'
    | '/content/export'
    | '/content/generate'
    | '/content/review'
    | '/agents/'
    | '/content'
    | '/agents/choice'
    | '/agents/manual'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/home'
    | '/auth/email-verification'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/agents'
    | '/agents/edit'
    | '/content/export'
    | '/content/generate'
    | '/content/review'
    | '/content'
    | '/agents/choice'
    | '/agents/manual'
  id:
    | '__root__'
    | '/'
    | '/_dashboard'
    | '/auth'
    | '/_dashboard/home'
    | '/auth/email-verification'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/_dashboard/agents'
    | '/_dashboard/agents/_flow'
    | '/_dashboard/agents/edit'
    | '/_dashboard/content/export'
    | '/_dashboard/content/generate'
    | '/_dashboard/content/review'
    | '/_dashboard/agents/'
    | '/_dashboard/content/'
    | '/_dashboard/agents/_flow/choice'
    | '/_dashboard/agents/_flow/manual'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/agents': {
      id: '/_dashboard/agents'
      path: '/agents'
      fullPath: '/agents'
      preLoaderRoute: typeof DashboardAgentsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/email-verification': {
      id: '/auth/email-verification'
      path: '/email-verification'
      fullPath: '/auth/email-verification'
      preLoaderRoute: typeof AuthEmailVerificationRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_dashboard/home': {
      id: '/_dashboard/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof DashboardHomeRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/content/': {
      id: '/_dashboard/content/'
      path: '/content'
      fullPath: '/content'
      preLoaderRoute: typeof DashboardContentIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/agents/': {
      id: '/_dashboard/agents/'
      path: '/'
      fullPath: '/agents/'
      preLoaderRoute: typeof DashboardAgentsIndexRouteImport
      parentRoute: typeof DashboardAgentsRoute
    }
    '/_dashboard/content/review': {
      id: '/_dashboard/content/review'
      path: '/content/review'
      fullPath: '/content/review'
      preLoaderRoute: typeof DashboardContentReviewRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/content/generate': {
      id: '/_dashboard/content/generate'
      path: '/content/generate'
      fullPath: '/content/generate'
      preLoaderRoute: typeof DashboardContentGenerateRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/content/export': {
      id: '/_dashboard/content/export'
      path: '/content/export'
      fullPath: '/content/export'
      preLoaderRoute: typeof DashboardContentExportRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/agents/edit': {
      id: '/_dashboard/agents/edit'
      path: '/edit'
      fullPath: '/agents/edit'
      preLoaderRoute: typeof DashboardAgentsEditRouteImport
      parentRoute: typeof DashboardAgentsRoute
    }
    '/_dashboard/agents/_flow': {
      id: '/_dashboard/agents/_flow'
      path: '/agents'
      fullPath: '/agents'
      preLoaderRoute: typeof DashboardAgentsFlowRouteImport
      parentRoute: typeof DashboardAgentsRoute
    }
    '/_dashboard/agents/_flow/manual': {
      id: '/_dashboard/agents/_flow/manual'
      path: '/manual'
      fullPath: '/agents/manual'
      preLoaderRoute: typeof DashboardAgentsFlowManualRouteImport
      parentRoute: typeof DashboardAgentsFlowRoute
    }
    '/_dashboard/agents/_flow/choice': {
      id: '/_dashboard/agents/_flow/choice'
      path: '/choice'
      fullPath: '/agents/choice'
      preLoaderRoute: typeof DashboardAgentsFlowChoiceRouteImport
      parentRoute: typeof DashboardAgentsFlowRoute
    }
  }
}

interface DashboardAgentsFlowRouteChildren {
  DashboardAgentsFlowChoiceRoute: typeof DashboardAgentsFlowChoiceRoute
  DashboardAgentsFlowManualRoute: typeof DashboardAgentsFlowManualRoute
}

const DashboardAgentsFlowRouteChildren: DashboardAgentsFlowRouteChildren = {
  DashboardAgentsFlowChoiceRoute: DashboardAgentsFlowChoiceRoute,
  DashboardAgentsFlowManualRoute: DashboardAgentsFlowManualRoute,
}

const DashboardAgentsFlowRouteWithChildren =
  DashboardAgentsFlowRoute._addFileChildren(DashboardAgentsFlowRouteChildren)

interface DashboardAgentsRouteChildren {
  DashboardAgentsFlowRoute: typeof DashboardAgentsFlowRouteWithChildren
  DashboardAgentsEditRoute: typeof DashboardAgentsEditRoute
  DashboardAgentsIndexRoute: typeof DashboardAgentsIndexRoute
}

const DashboardAgentsRouteChildren: DashboardAgentsRouteChildren = {
  DashboardAgentsFlowRoute: DashboardAgentsFlowRouteWithChildren,
  DashboardAgentsEditRoute: DashboardAgentsEditRoute,
  DashboardAgentsIndexRoute: DashboardAgentsIndexRoute,
}

const DashboardAgentsRouteWithChildren = DashboardAgentsRoute._addFileChildren(
  DashboardAgentsRouteChildren,
)

interface DashboardRouteChildren {
  DashboardHomeRoute: typeof DashboardHomeRoute
  DashboardAgentsRoute: typeof DashboardAgentsRouteWithChildren
  DashboardContentExportRoute: typeof DashboardContentExportRoute
  DashboardContentGenerateRoute: typeof DashboardContentGenerateRoute
  DashboardContentReviewRoute: typeof DashboardContentReviewRoute
  DashboardContentIndexRoute: typeof DashboardContentIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardHomeRoute: DashboardHomeRoute,
  DashboardAgentsRoute: DashboardAgentsRouteWithChildren,
  DashboardContentExportRoute: DashboardContentExportRoute,
  DashboardContentGenerateRoute: DashboardContentGenerateRoute,
  DashboardContentReviewRoute: DashboardContentReviewRoute,
  DashboardContentIndexRoute: DashboardContentIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

interface AuthRouteChildren {
  AuthEmailVerificationRoute: typeof AuthEmailVerificationRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthEmailVerificationRoute: AuthEmailVerificationRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
