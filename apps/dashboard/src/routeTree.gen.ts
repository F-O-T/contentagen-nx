/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as DashboardRouteImport } from './routes/_dashboard'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as AuthEmailVerificationRouteImport } from './routes/auth/email-verification'
import { Route as DashboardProfileRouteImport } from './routes/_dashboard/profile'
import { Route as DashboardHomeRouteImport } from './routes/_dashboard/home'
import { Route as DashboardOrganizationIndexRouteImport } from './routes/_dashboard/organization/index'
import { Route as DashboardAgentsIndexRouteImport } from './routes/_dashboard/agents/index'
import { Route as DashboardOrganizationCreateRouteImport } from './routes/_dashboard/organization/create'
import { Route as DashboardAgentsFlowRouteImport } from './routes/_dashboard/agents/_flow'
import { Route as DashboardAgentsAgentIdIndexRouteImport } from './routes/_dashboard/agents/$agentId/index'
import { Route as DashboardAgentsFlowManualRouteImport } from './routes/_dashboard/agents/_flow/manual'
import { Route as DashboardAgentsAgentIdContentRequestRouteImport } from './routes/_dashboard/agents/$agentId/content/request'

const DashboardAgentsRouteImport = createFileRoute('/_dashboard/agents')()

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardAgentsRoute = DashboardAgentsRouteImport.update({
  id: '/agents',
  path: '/agents',
  getParentRoute: () => DashboardRoute,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)
const AuthEmailVerificationRoute = AuthEmailVerificationRouteImport.update({
  id: '/email-verification',
  path: '/email-verification',
  getParentRoute: () => AuthRoute,
} as any)
const DashboardProfileRoute = DashboardProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardHomeRoute = DashboardHomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardOrganizationIndexRoute =
  DashboardOrganizationIndexRouteImport.update({
    id: '/organization/',
    path: '/organization/',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardAgentsIndexRoute = DashboardAgentsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardAgentsRoute,
} as any)
const DashboardOrganizationCreateRoute =
  DashboardOrganizationCreateRouteImport.update({
    id: '/organization/create',
    path: '/organization/create',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardAgentsFlowRoute = DashboardAgentsFlowRouteImport.update({
  id: '/_flow',
  getParentRoute: () => DashboardAgentsRoute,
} as any)
const DashboardAgentsAgentIdIndexRoute =
  DashboardAgentsAgentIdIndexRouteImport.update({
    id: '/$agentId/',
    path: '/$agentId/',
    getParentRoute: () => DashboardAgentsRoute,
  } as any)
const DashboardAgentsFlowManualRoute =
  DashboardAgentsFlowManualRouteImport.update({
    id: '/manual',
    path: '/manual',
    getParentRoute: () => DashboardAgentsFlowRoute,
  } as any)
const DashboardAgentsAgentIdContentRequestRoute =
  DashboardAgentsAgentIdContentRequestRouteImport.update({
    id: '/$agentId/content/request',
    path: '/$agentId/content/request',
    getParentRoute: () => DashboardAgentsRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRouteWithChildren
  '/home': typeof DashboardHomeRoute
  '/profile': typeof DashboardProfileRoute
  '/auth/email-verification': typeof AuthEmailVerificationRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/agents': typeof DashboardAgentsFlowRouteWithChildren
  '/organization/create': typeof DashboardOrganizationCreateRoute
  '/agents/': typeof DashboardAgentsIndexRoute
  '/organization': typeof DashboardOrganizationIndexRoute
  '/agents/manual': typeof DashboardAgentsFlowManualRoute
  '/agents/$agentId': typeof DashboardAgentsAgentIdIndexRoute
  '/agents/$agentId/content/request': typeof DashboardAgentsAgentIdContentRequestRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRouteWithChildren
  '/home': typeof DashboardHomeRoute
  '/profile': typeof DashboardProfileRoute
  '/auth/email-verification': typeof AuthEmailVerificationRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/agents': typeof DashboardAgentsIndexRoute
  '/organization/create': typeof DashboardOrganizationCreateRoute
  '/organization': typeof DashboardOrganizationIndexRoute
  '/agents/manual': typeof DashboardAgentsFlowManualRoute
  '/agents/$agentId': typeof DashboardAgentsAgentIdIndexRoute
  '/agents/$agentId/content/request': typeof DashboardAgentsAgentIdContentRequestRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_dashboard': typeof DashboardRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/_dashboard/home': typeof DashboardHomeRoute
  '/_dashboard/profile': typeof DashboardProfileRoute
  '/auth/email-verification': typeof AuthEmailVerificationRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/_dashboard/agents': typeof DashboardAgentsRouteWithChildren
  '/_dashboard/agents/_flow': typeof DashboardAgentsFlowRouteWithChildren
  '/_dashboard/organization/create': typeof DashboardOrganizationCreateRoute
  '/_dashboard/agents/': typeof DashboardAgentsIndexRoute
  '/_dashboard/organization/': typeof DashboardOrganizationIndexRoute
  '/_dashboard/agents/_flow/manual': typeof DashboardAgentsFlowManualRoute
  '/_dashboard/agents/$agentId/': typeof DashboardAgentsAgentIdIndexRoute
  '/_dashboard/agents/$agentId/content/request': typeof DashboardAgentsAgentIdContentRequestRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/home'
    | '/profile'
    | '/auth/email-verification'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/agents'
    | '/organization/create'
    | '/agents/'
    | '/organization'
    | '/agents/manual'
    | '/agents/$agentId'
    | '/agents/$agentId/content/request'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/home'
    | '/profile'
    | '/auth/email-verification'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/agents'
    | '/organization/create'
    | '/organization'
    | '/agents/manual'
    | '/agents/$agentId'
    | '/agents/$agentId/content/request'
  id:
    | '__root__'
    | '/_dashboard'
    | '/auth'
    | '/_dashboard/home'
    | '/_dashboard/profile'
    | '/auth/email-verification'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/_dashboard/agents'
    | '/_dashboard/agents/_flow'
    | '/_dashboard/organization/create'
    | '/_dashboard/agents/'
    | '/_dashboard/organization/'
    | '/_dashboard/agents/_flow/manual'
    | '/_dashboard/agents/$agentId/'
    | '/_dashboard/agents/$agentId/content/request'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  DashboardRoute: typeof DashboardRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/agents': {
      id: '/_dashboard/agents'
      path: '/agents'
      fullPath: '/agents'
      preLoaderRoute: typeof DashboardAgentsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/email-verification': {
      id: '/auth/email-verification'
      path: '/email-verification'
      fullPath: '/auth/email-verification'
      preLoaderRoute: typeof AuthEmailVerificationRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_dashboard/profile': {
      id: '/_dashboard/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof DashboardProfileRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/home': {
      id: '/_dashboard/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof DashboardHomeRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/organization/': {
      id: '/_dashboard/organization/'
      path: '/organization'
      fullPath: '/organization'
      preLoaderRoute: typeof DashboardOrganizationIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/agents/': {
      id: '/_dashboard/agents/'
      path: '/'
      fullPath: '/agents/'
      preLoaderRoute: typeof DashboardAgentsIndexRouteImport
      parentRoute: typeof DashboardAgentsRoute
    }
    '/_dashboard/organization/create': {
      id: '/_dashboard/organization/create'
      path: '/organization/create'
      fullPath: '/organization/create'
      preLoaderRoute: typeof DashboardOrganizationCreateRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/agents/_flow': {
      id: '/_dashboard/agents/_flow'
      path: '/agents'
      fullPath: '/agents'
      preLoaderRoute: typeof DashboardAgentsFlowRouteImport
      parentRoute: typeof DashboardAgentsRoute
    }
    '/_dashboard/agents/$agentId/': {
      id: '/_dashboard/agents/$agentId/'
      path: '/$agentId'
      fullPath: '/agents/$agentId'
      preLoaderRoute: typeof DashboardAgentsAgentIdIndexRouteImport
      parentRoute: typeof DashboardAgentsRoute
    }
    '/_dashboard/agents/_flow/manual': {
      id: '/_dashboard/agents/_flow/manual'
      path: '/manual'
      fullPath: '/agents/manual'
      preLoaderRoute: typeof DashboardAgentsFlowManualRouteImport
      parentRoute: typeof DashboardAgentsFlowRoute
    }
    '/_dashboard/agents/$agentId/content/request': {
      id: '/_dashboard/agents/$agentId/content/request'
      path: '/$agentId/content/request'
      fullPath: '/agents/$agentId/content/request'
      preLoaderRoute: typeof DashboardAgentsAgentIdContentRequestRouteImport
      parentRoute: typeof DashboardAgentsRoute
    }
  }
}

interface DashboardAgentsFlowRouteChildren {
  DashboardAgentsFlowManualRoute: typeof DashboardAgentsFlowManualRoute
}

const DashboardAgentsFlowRouteChildren: DashboardAgentsFlowRouteChildren = {
  DashboardAgentsFlowManualRoute: DashboardAgentsFlowManualRoute,
}

const DashboardAgentsFlowRouteWithChildren =
  DashboardAgentsFlowRoute._addFileChildren(DashboardAgentsFlowRouteChildren)

interface DashboardAgentsRouteChildren {
  DashboardAgentsFlowRoute: typeof DashboardAgentsFlowRouteWithChildren
  DashboardAgentsIndexRoute: typeof DashboardAgentsIndexRoute
  DashboardAgentsAgentIdIndexRoute: typeof DashboardAgentsAgentIdIndexRoute
  DashboardAgentsAgentIdContentRequestRoute: typeof DashboardAgentsAgentIdContentRequestRoute
}

const DashboardAgentsRouteChildren: DashboardAgentsRouteChildren = {
  DashboardAgentsFlowRoute: DashboardAgentsFlowRouteWithChildren,
  DashboardAgentsIndexRoute: DashboardAgentsIndexRoute,
  DashboardAgentsAgentIdIndexRoute: DashboardAgentsAgentIdIndexRoute,
  DashboardAgentsAgentIdContentRequestRoute:
    DashboardAgentsAgentIdContentRequestRoute,
}

const DashboardAgentsRouteWithChildren = DashboardAgentsRoute._addFileChildren(
  DashboardAgentsRouteChildren,
)

interface DashboardRouteChildren {
  DashboardHomeRoute: typeof DashboardHomeRoute
  DashboardProfileRoute: typeof DashboardProfileRoute
  DashboardAgentsRoute: typeof DashboardAgentsRouteWithChildren
  DashboardOrganizationCreateRoute: typeof DashboardOrganizationCreateRoute
  DashboardOrganizationIndexRoute: typeof DashboardOrganizationIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardHomeRoute: DashboardHomeRoute,
  DashboardProfileRoute: DashboardProfileRoute,
  DashboardAgentsRoute: DashboardAgentsRouteWithChildren,
  DashboardOrganizationCreateRoute: DashboardOrganizationCreateRoute,
  DashboardOrganizationIndexRoute: DashboardOrganizationIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

interface AuthRouteChildren {
  AuthEmailVerificationRoute: typeof AuthEmailVerificationRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthEmailVerificationRoute: AuthEmailVerificationRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  DashboardRoute: DashboardRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
