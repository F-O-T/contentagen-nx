/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ContentIndexRouteImport } from './routes/content/index'
import { Route as AgentsIndexRouteImport } from './routes/agents/index'
import { Route as ContentReviewRouteImport } from './routes/content/review'
import { Route as ContentGenerateRouteImport } from './routes/content/generate'
import { Route as ContentExportRouteImport } from './routes/content/export'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as AuthEmailVerificationRouteImport } from './routes/auth/email-verification'
import { Route as AgentsEditRouteImport } from './routes/agents/edit'
import { Route as AgentsCreateRouteImport } from './routes/agents/create'

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ContentIndexRoute = ContentIndexRouteImport.update({
  id: '/content/',
  path: '/content/',
  getParentRoute: () => rootRouteImport,
} as any)
const AgentsIndexRoute = AgentsIndexRouteImport.update({
  id: '/agents/',
  path: '/agents/',
  getParentRoute: () => rootRouteImport,
} as any)
const ContentReviewRoute = ContentReviewRouteImport.update({
  id: '/content/review',
  path: '/content/review',
  getParentRoute: () => rootRouteImport,
} as any)
const ContentGenerateRoute = ContentGenerateRouteImport.update({
  id: '/content/generate',
  path: '/content/generate',
  getParentRoute: () => rootRouteImport,
} as any)
const ContentExportRoute = ContentExportRouteImport.update({
  id: '/content/export',
  path: '/content/export',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)
const AuthEmailVerificationRoute = AuthEmailVerificationRouteImport.update({
  id: '/email-verification',
  path: '/email-verification',
  getParentRoute: () => AuthRoute,
} as any)
const AgentsEditRoute = AgentsEditRouteImport.update({
  id: '/agents/edit',
  path: '/agents/edit',
  getParentRoute: () => rootRouteImport,
} as any)
const AgentsCreateRoute = AgentsCreateRouteImport.update({
  id: '/agents/create',
  path: '/agents/create',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/agents/create': typeof AgentsCreateRoute
  '/agents/edit': typeof AgentsEditRoute
  '/auth/email-verification': typeof AuthEmailVerificationRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/content/export': typeof ContentExportRoute
  '/content/generate': typeof ContentGenerateRoute
  '/content/review': typeof ContentReviewRoute
  '/agents': typeof AgentsIndexRoute
  '/content': typeof ContentIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/agents/create': typeof AgentsCreateRoute
  '/agents/edit': typeof AgentsEditRoute
  '/auth/email-verification': typeof AuthEmailVerificationRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/content/export': typeof ContentExportRoute
  '/content/generate': typeof ContentGenerateRoute
  '/content/review': typeof ContentReviewRoute
  '/agents': typeof AgentsIndexRoute
  '/content': typeof ContentIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/agents/create': typeof AgentsCreateRoute
  '/agents/edit': typeof AgentsEditRoute
  '/auth/email-verification': typeof AuthEmailVerificationRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/content/export': typeof ContentExportRoute
  '/content/generate': typeof ContentGenerateRoute
  '/content/review': typeof ContentReviewRoute
  '/agents/': typeof AgentsIndexRoute
  '/content/': typeof ContentIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/agents/create'
    | '/agents/edit'
    | '/auth/email-verification'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/content/export'
    | '/content/generate'
    | '/content/review'
    | '/agents'
    | '/content'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/agents/create'
    | '/agents/edit'
    | '/auth/email-verification'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/content/export'
    | '/content/generate'
    | '/content/review'
    | '/agents'
    | '/content'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/agents/create'
    | '/agents/edit'
    | '/auth/email-verification'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/content/export'
    | '/content/generate'
    | '/content/review'
    | '/agents/'
    | '/content/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  AgentsCreateRoute: typeof AgentsCreateRoute
  AgentsEditRoute: typeof AgentsEditRoute
  ContentExportRoute: typeof ContentExportRoute
  ContentGenerateRoute: typeof ContentGenerateRoute
  ContentReviewRoute: typeof ContentReviewRoute
  AgentsIndexRoute: typeof AgentsIndexRoute
  ContentIndexRoute: typeof ContentIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/content/': {
      id: '/content/'
      path: '/content'
      fullPath: '/content'
      preLoaderRoute: typeof ContentIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agents/': {
      id: '/agents/'
      path: '/agents'
      fullPath: '/agents'
      preLoaderRoute: typeof AgentsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/content/review': {
      id: '/content/review'
      path: '/content/review'
      fullPath: '/content/review'
      preLoaderRoute: typeof ContentReviewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/content/generate': {
      id: '/content/generate'
      path: '/content/generate'
      fullPath: '/content/generate'
      preLoaderRoute: typeof ContentGenerateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/content/export': {
      id: '/content/export'
      path: '/content/export'
      fullPath: '/content/export'
      preLoaderRoute: typeof ContentExportRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/email-verification': {
      id: '/auth/email-verification'
      path: '/email-verification'
      fullPath: '/auth/email-verification'
      preLoaderRoute: typeof AuthEmailVerificationRouteImport
      parentRoute: typeof AuthRoute
    }
    '/agents/edit': {
      id: '/agents/edit'
      path: '/agents/edit'
      fullPath: '/agents/edit'
      preLoaderRoute: typeof AgentsEditRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agents/create': {
      id: '/agents/create'
      path: '/agents/create'
      fullPath: '/agents/create'
      preLoaderRoute: typeof AgentsCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AuthRouteChildren {
  AuthEmailVerificationRoute: typeof AuthEmailVerificationRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthEmailVerificationRoute: AuthEmailVerificationRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  AgentsCreateRoute: AgentsCreateRoute,
  AgentsEditRoute: AgentsEditRoute,
  ContentExportRoute: ContentExportRoute,
  ContentGenerateRoute: ContentGenerateRoute,
  ContentReviewRoute: ContentReviewRoute,
  AgentsIndexRoute: AgentsIndexRoute,
  ContentIndexRoute: ContentIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
