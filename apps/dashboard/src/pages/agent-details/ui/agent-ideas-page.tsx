import { useState, useMemo, useCallback } from "react";
import { useTRPC } from "@/integrations/clients";
import { useSuspenseQuery } from "@tanstack/react-query";
import { Button } from "@packages/ui/components/button";
import { IdeaCard } from "@/pages/ideas-list/ui/idea-card";
import { TalkingMascot } from "@/widgets/talking-mascot/ui/talking-mascot";
import { Link } from "@tanstack/react-router";

interface AgentIdeasPageProps {
   agentId: string;
}

export function AgentIdeasPage({ agentId }: AgentIdeasPageProps) {
   const trpc = useTRPC();
   const [page, setPage] = useState(1);
   const [limit] = useState(8);

   const { data } = useSuspenseQuery(
      trpc.ideas.listByAgentPaginated.queryOptions({
         agentId,
         page,
         limit,
      }),
   );

   const totalPages = useMemo(() => {
      return Math.ceil(data.total / limit);
   }, [data.total, limit]);

   const handlePrevPage = useCallback(() => {
      setPage((p) => Math.max(1, p - 1));
   }, []);

   const handleNextPage = useCallback(() => {
      setPage((p) => Math.min(totalPages, p + 1));
   }, [totalPages]);

   return (
      <main className="h-full w-full flex flex-col gap-4">
         <div className="flex items-center gap-4">
            <Link to="/agents/$agentId" params={{ agentId }}>
               <Button variant="outline" size="sm">
                  ‚Üê Back to Agent
               </Button>
            </Link>
            <TalkingMascot message="Ideas generated by this agent." />
         </div>
         <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
            {data.items.map((item) => (
               <IdeaCard key={item.id} idea={item} />
            ))}
         </div>
         {data.total > limit && (
            <div className="flex justify-center items-center gap-4">
               <Button
                  disabled={page === 1}
                  onClick={handlePrevPage}
                  variant="outline"
               >
                  Previous
               </Button>
               <span>
                  Page {page} of {totalPages}
               </span>
               <Button
                  disabled={page === totalPages}
                  onClick={handleNextPage}
                  variant="outline"
               >
                  Next
               </Button>
            </div>
         )}
      </main>
   );
}
