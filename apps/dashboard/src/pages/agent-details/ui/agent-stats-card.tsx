// apps/dashboard/src/pages/agent-details/ui/agent-stats-card.tsx

import { StatsCard } from "@packages/ui/components/stats-card";
import { useSuspenseQuery } from "@tanstack/react-query";
import { useTRPC } from "@/integrations/clients";
import { useParams } from "@tanstack/react-router";
import { useMemo } from "react";

export function AgentStatsCard() {
   const trpc = useTRPC();
   const id = useParams({
      from: "/_dashboard/agents/$agentId/",
      select: ({ agentId }) => agentId,
   });
   const { data } = useSuspenseQuery(
      trpc.agent.stats.queryOptions({
         id,
      }),
   );

   const items = useMemo(() => {
      const drafts = {
         title: "Drafts",
         description: "Number of drafts the agent has saved.",
         value: data.totalDraft?.toLocaleString() ?? "0",
      };

      const published = {
         title: "Published",
         description: "Number of published pieces produced by the agent.",
         value: data.totalPublished?.toLocaleString() ?? "0",
      };

      const totalContentValue = (
         Number(data.totalDraft ?? 0) + Number(data.totalPublished ?? 0)
      ).toLocaleString();

      return [
         {
            label: "Total Content",
            description: "All the content produced by the agent.",
            value: totalContentValue,
            details: [drafts, published],
         },
         {
            label: "Total Words Written",
            description: "Cumulative words written across all content.",
            value: data.wordsWritten?.toLocaleString() ?? "0",
         },
         {
            label: "Avg. Quality Score",
            description: "Average quality score across generated content.",
            value: data.avgQualityScore?.toFixed(2).toString() ?? "0",
         },
         {
            label: "Total Ideas",
            description: "Total ideas generated by the agent.",
            value: data.totalIdeas?.toLocaleString() ?? "0",
         },
      ];
   }, [data]);

   return (
      <div className="w-full gap-4 grid md:grid-cols-2">
         {items.map((item) => (
            <StatsCard
               key={item.label}
               title={item.label}
               description={item.description}
               value={item.value}
               details={item.details}
            />
         ))}
      </div>
   );
}
